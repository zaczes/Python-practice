"""
My solution to the cows and bulls problem 
(http://www.practicepython.org/exercise/2014/07/05/18-cows-and-bulls.html)
"""

import random
def get_str(prompt):    #
    """takes user's guesses"""
    
    return str(input(prompt))
def get_int(prompt):
    """takes the number of digits (setting difficulty level)"""
    
    while True:
        a = int(input(prompt))
        if a <= 9 and a >= 1:   #handles incorrect input
            return a
        else:
            print("Wrong value!")
            continue
def gen_no(length):
    """Generates the secret number (length-digits long) for the user to guess. Each digit is only used once."""
    
    a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    b = []
    #until list b reaches desired length, the function will feed it random digits
    while len(b) < length:
        choice = random.choice(a)
        #makes sure the digits won't repeat themselves
        if choice not in b:
            b.append(choice)

    #cheat for testing - displays the secret number:
    #print(''.join(map(str, b)))

    return ''.join(map(str, b))
def compare(user, gen):
    """
    :param user: user's guess in the current cycle
    :param gen: the secret number generated by function gen_no()
    :return: condition for winning (True) or continuing (False) the game
    """

    #the function will add numbers to these lists:
    cows = []
    bulls = []


    for x in user:
        for y in gen:
            if x == y:                                    #general condition for both bulls and cows
                if user.index(x) == gen.index(y):          #condition for cows
                    if x not in cows:
                        cows.append(x)
                elif x not in cows and x not in bulls:      #condition for bulls
                    bulls.append(x)

    #checks for victory:
    if len(cows) == len(gen):
        print("Yay! Victory!")
        return True
    else:
        print("Try again!")
        print(len(cows), " cows   ", len(bulls), " bulls")
        return False

if __name__ == "__main__":

    print("Bulls and cows!") #explanation
    print("The computer generates a number. You must guess it, one digit at a time. Each digit may only appear once.")
    print("For every correct number in the wrong place, you get a cow. For every one in the right place, "
          "you get a bull.\n")

    #main loop
    while True:

        #sentinel value, after each cycle <compare> feeds it with current game status:
        win = False

        #establishes initial conditions:
        difficulty = get_int("Please choose the number of digits\n(min 1, max 9, recommended 4): ")
        secret_number = gen_no(difficulty)

        #checks for victory
        while win is False:
            guess = get_str("Enter your guess:  ")
            win = compare(guess, secret_number)

        #this just asks user if they want to play again:
        play_again = str(input("Again? y/n  "))
        if play_again == 'y':
            continue
        if play_again == 'n':
            break


